{"version":3,"file":"static/js/138.1ae71deb.chunk.js","mappings":"qMAkBA,EAda,SAAC,GAAa,IAAXA,EAAU,EAAVA,IACRC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAIG,KAAI,SAAAC,GAAE,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGE,IAAMC,MAAON,EAArC,SACGG,EAAGI,SAFCJ,EAAGE,GADH,KAShB,C,oHCED,EAhBmB,SAAC,GAAD,IAAGG,EAAH,EAAGA,SAAH,OACjB,kBAAMC,UAAU,OAAOD,SAAUA,EAAjC,WACE,mBAAQE,KAAK,SAASD,UAAU,SAAhC,UACE,iBAAMA,UAAU,eAAhB,uBAGF,kBACEA,UAAU,QACVC,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,WAAS,EACTC,YAAY,wBAZC,E,SCuCnB,EAnCe,WACb,OAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAQP,EAAOQ,IAAI,QAuBzB,OAXAC,EAAAA,EAAAA,YAAU,WACHF,IAGLD,GAAW,IACXI,EAAAA,EAAAA,IAASH,GACNI,MAAK,SAAAC,GAAG,OAAIR,EAASQ,EAAb,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,QAApB,IACTC,SAAQ,kBAAMZ,GAAW,EAAjB,IACZ,GAAE,CAACC,KAGF,iCACE,SAAC,EAAD,CAAYf,SAvBC,SAAA2B,GACfA,EAAEC,iBACF,IAAMC,EAAcF,EAAEG,cAAcC,SAASvB,OAAOwB,MACpD,GAA2B,KAAvBH,EAAYI,OACd,OAAOC,OAAOC,MAAM,0BAEtB1B,EAAU,CAAE2B,KAAMP,IAClBF,EAAEG,cAAcO,OACjB,IAgBIxB,GAAU,wCAAsB,SAACyB,EAAA,EAAD,CAAM/C,IAAKoB,MAGjD,C,mKCvCK4B,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,WACzB,OAAOD,EAAAA,GAAAA,IAAA,sCAC+BD,IACnCpB,MAAK,SAAAC,GAAG,OAAIA,EAAIsB,KAAKC,OAAb,GACZ,EAEYzB,EAAW,SAAAP,GACtB,OAAO6B,EAAAA,GAAAA,IAAA,gCAEsBD,EAFtB,kBAEuC5B,EAFvC,gCAIJQ,MAAK,SAAAC,GAAG,OAAIA,EAAIsB,KAAKC,OAAb,GACZ,EAEYC,EAAe,SAAA/C,GAC1B,OAAO2C,EAAAA,GAAAA,IAAA,iBAAoB3C,EAApB,oBAAkC0C,IAAWpB,MAAK,SAAAC,GAAG,OAAIA,EAAIsB,IAAR,GAC7D,EAEYG,EAAc,SAAAhD,GACzB,OAAO2C,EAAAA,GAAAA,IAAA,iBACU3C,EADV,4BACgC0C,IACpCpB,MAAK,SAAAC,GAAG,OAAIA,EAAIsB,IAAR,GACZ,EAEYI,EAAgB,SAAAjD,GAC3B,OAAO2C,EAAAA,GAAAA,IAAA,iBACU3C,EADV,4BACgC0C,IACpCpB,MAAK,SAAAC,GAAG,OAAIA,EAAIsB,IAAR,GACZ,C","sources":["components/List/List.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","utils/filmsApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './List.css';\n\nconst List = ({ arr }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {arr.map(el => (\n        <li key={el.id}>\n          <Link to={`/movies/${el.id}`} state={location}>\n            {el.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default List;\n\nList.propTypes = {\n  arr: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './SearchForm.css';\n\nconst SearchForm = ({ onSubmit }) => (\n  <form className=\"form\" onSubmit={onSubmit}>\n    <button type=\"submit\" className=\"button\">\n      <span className=\"button-label\">Search</span>\n    </button>\n\n    <input\n      className=\"input\"\n      type=\"text\"\n      name=\"search\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search movie here\"\n    />\n  </form>\n);\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovie } from 'utils/filmsApi';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport List from 'components/List/List';\nimport './Movies.css';\n\nconst Movies = () => {\n  const [search, setSearch] = useSearchParams();\n  const [query, setQuery] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const sQery = search.get('film');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const searchValue = e.currentTarget.elements.search.value;\n    if (searchValue.trim() === '') {\n      return window.alert('Please enter something');\n    }\n    setSearch({ film: searchValue });\n    e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    if (!sQery) {\n      return;\n    }\n    setLoading(true);\n    getMovie(sQery)\n      .then(res => setQuery(res))\n      .catch(err => console.log(err.message))\n      .finally(() => setLoading(false));\n  }, [sQery]);\n\n  return (\n    <>\n      <SearchForm onSubmit={onSubmit} />\n      {loading ? <h2>Loading...</h2> : <List arr={query} />}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'db35b30505be40a9278db1f8a9f126fa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = () => {\n  return axios\n    .get(`/trending/movie/day?api_key=${API_KEY}`)\n    .then(res => res.data.results);\n};\n\nexport const getMovie = query => {\n  return axios\n    .get(\n      `/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    )\n    .then(res => res.data.results);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`/movie/${id}?api_key=${API_KEY}`).then(res => res.data);\n};\n\nexport const getCastById = id => {\n  return axios\n    .get(`/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(res => res.data);\n};\n\nexport const getRevievById = id => {\n  return axios\n    .get(`/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(res => res.data);\n};\n"],"names":["arr","location","useLocation","map","el","to","id","state","title","onSubmit","className","type","name","autoComplete","autoFocus","placeholder","useSearchParams","search","setSearch","useState","query","setQuery","loading","setLoading","sQery","get","useEffect","getMovie","then","res","catch","err","console","log","message","finally","e","preventDefault","searchValue","currentTarget","elements","value","trim","window","alert","film","reset","List","API_KEY","axios","getTrending","data","results","getMovieById","getCastById","getRevievById"],"sourceRoot":""}