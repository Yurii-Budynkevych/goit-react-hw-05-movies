{"version":3,"file":"static/js/103.8e2ef7ee.chunk.js","mappings":"oOAsCA,EAjCgB,WACd,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACHJ,IAGLG,GAAW,IACXE,EAAAA,EAAAA,IAAcL,GACXM,MAAK,SAAAC,GAAG,OAAIR,EAAUQ,EAAIC,QAAlB,IACRC,SAAQ,kBAAMN,GAAW,EAAjB,IACZ,GAAE,CAACH,EAAIF,EAAOY,SACXR,GACK,uCAEa,IAAlBJ,EAAOY,QACF,kEAGP,yBACE,wBACGZ,EAAOa,KAAI,SAAAC,GAAE,OACZ,2BACE,wBAAKA,EAAGC,UACR,cAAGC,UAAU,SAAb,SAAuBF,EAAGG,YAFnBH,EAAGZ,GADA,OASrB,C,mKCnCKgB,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,WACzB,OAAOD,EAAAA,GAAAA,IAAA,sCAC+BD,IACnCV,MAAK,SAAAC,GAAG,OAAIA,EAAIY,KAAKX,OAAb,GACZ,EAEYY,EAAW,SAAAC,GACtB,OAAOJ,EAAAA,GAAAA,IAAA,gCAEsBD,EAFtB,kBAEuCK,EAFvC,gCAIJf,MAAK,SAAAC,GAAG,OAAIA,EAAIY,KAAKX,OAAb,GACZ,EAEYc,EAAe,SAAAtB,GAC1B,OAAOiB,EAAAA,GAAAA,IAAA,iBAAoBjB,EAApB,oBAAkCgB,IAAWV,MAAK,SAAAC,GAAG,OAAIA,EAAIY,IAAR,GAC7D,EAEYI,EAAc,SAAAvB,GACzB,OAAOiB,EAAAA,GAAAA,IAAA,iBACUjB,EADV,4BACgCgB,IACpCV,MAAK,SAAAC,GAAG,OAAIA,EAAIY,IAAR,GACZ,EAEYd,EAAgB,SAAAL,GAC3B,OAAOiB,EAAAA,GAAAA,IAAA,iBACUjB,EADV,4BACgCgB,IACpCV,MAAK,SAAAC,GAAG,OAAIA,EAAIY,IAAR,GACZ,C","sources":["components/Reviews/Revievs.jsx","utils/filmsApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRevievById } from 'utils/filmsApi';\nimport './Revievs.css';\n\nconst Reviews = () => {\n  const [reviev, setReviev] = useState([]);\n  const { id } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    setLoading(true);\n    getRevievById(id)\n      .then(res => setReviev(res.results))\n      .finally(() => setLoading(false));\n  }, [id, reviev.length]);\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n  if (reviev.length === 0) {\n    return <h3>We don't have revievs for this movie</h3>;\n  }\n  return (\n    <h3>\n      <ul>\n        {reviev.map(el => (\n          <li key={el.id}>\n            <h4>{el.author}</h4>\n            <p className=\"reviev\">{el.content}</p>\n          </li>\n        ))}\n      </ul>\n    </h3>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'db35b30505be40a9278db1f8a9f126fa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = () => {\n  return axios\n    .get(`/trending/movie/day?api_key=${API_KEY}`)\n    .then(res => res.data.results);\n};\n\nexport const getMovie = query => {\n  return axios\n    .get(\n      `/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    )\n    .then(res => res.data.results);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`/movie/${id}?api_key=${API_KEY}`).then(res => res.data);\n};\n\nexport const getCastById = id => {\n  return axios\n    .get(`/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(res => res.data);\n};\n\nexport const getRevievById = id => {\n  return axios\n    .get(`/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(res => res.data);\n};\n"],"names":["useState","reviev","setReviev","id","useParams","loading","setLoading","useEffect","getRevievById","then","res","results","finally","length","map","el","author","className","content","API_KEY","axios","getTrending","data","getMovie","query","getMovieById","getCastById"],"sourceRoot":""}